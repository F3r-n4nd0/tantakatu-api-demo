{
  "swagger": "2.0",
  "info": {
    "title": "tantakatu-api",
    "version": "1.0.0"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-Key"
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "required": [
        "fromaddress",
        "toaddress"
      ],
      "properties": {
        "plaintextbody": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "fromaddress": {
          "type": "string"
        },
        "toaddress": {
          "type": "string"
        }
      }
    },
    "ValidationError": {
      "allOf": [
        {
          "$ref": "#/definitions/Error"
        },
        {
          "type": "object",
          "properties": {
            "field": {
              "description": "an optional field name to which this validation error applies",
              "type": "string"
            }
          }
        }
      ]
    },
    "ItemList": {
      "title": "a list for a item",
      "description": "A item list is a minimalistic representation of a item. Useful for display in list views, like a item list.",
      "type": "object",
      "required": [
        "title",
        "status"
      ],
      "properties": {
        "id": {
          "title": "The id of the item.",
          "description": "A unique identifier for the item. These are created in ascending order.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "title": {
          "title": "The title of the item.",
          "description": "The title for a item, this needs to be at least 5 chars long. Titles don't allow any formatting, besides emoji.",
          "type": "string",
          "minLength": 5,
          "maxLength": 150
        },
        "description": {
          "title": "The description of the item.",
          "description": "The item description is a longer, more detailed description of the issue. Perhaps it even mentions steps to reproduce.",
          "type": "string"
        },
        "status": {
          "title": "the status of the item",
          "description": "There are 3 possible values for a status. Unavailable means the seller cancel the sale.",
          "type": "string",
          "enum": [
            "available",
            "unavailable",
            "sold"
          ]
        },
        "assignedTo": {
          "$ref": "#/definitions/Seller"
        },
        "tags": {
          "title": "item tags.",
          "description": "a item can be tagged with text blurbs.",
          "type": "array",
          "uniqueItems": true,
          "maxItems": 5,
          "items": {
            "pattern": "\\w[\\w- ]+",
            "minLength": 3,
            "type": "string"
          }
        }
      }
    },
    "Seller": {
      "title": "A minimal representation of a user.",
      "description": "This representation of a user is mainly meant for inclusion in other models, or for list views.",
      "type": "object",
      "required": [
        "id",
        "screenName"
      ],
      "properties": {
        "id": {
          "title": "A unique identifier for a user.",
          "description": "This id is automatically generated on the server when a user is created.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "screenName": {
          "title": "The screen name for the user.",
          "description": "This is used for vanity type urls as well as login credentials.",
          "type": "string",
          "pattern": "\\w[\\w_-]+",
          "minLength": 3,
          "maxLength": 255
        }
      }
    },
    "Error": {
      "title": "Error Structure",
      "description": "Contains all the properties any error response from the API will contain.\nSome properties are optional so might be empty most of the time\n",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "the error code, this is not necessarily the http status code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "a human readable version of the error",
          "type": "string"
        },
        "helpUrl": {
          "description": "an optional url for getting more help about this error",
          "type": "string",
          "format": "uri"
        }
      }
    }
  },
  "paths": {
    "/items": {
      "get": {
        "operationId": "listItems",
        "tags": [
          "items"
        ],
        "summary": "Lists the items",
        "description": "Allows for specifying a number of filter parameters to narrow down the results. Also allows for specifying a **sinceId** and **pageSize** parameter to page through large result sets.",
        "parameters": [
          {
            "name": "sinceId",
            "in": "query",
            "description": "The last id that was seen.",
            "type": "integer",
            "format": "int64",
            "required": false
          },
          {
            "name": "tags",
            "description": "the tags to filter by",
            "in": "query",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "the status to filter by",
            "in": "query",
            "type": "array",
            "uniqueItems": true,
            "collectionFormat": "pipes",
            "items": {
              "type": "string",
              "enum": [
                "available",
                "unavailable",
                "sold"
              ]
            }
          },
          {
            "$ref": "#/parameters/PageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": {
              "X-Last-Task-Id": {
                "type": "integer",
                "format": "int64",
                "description": "the last task id known to the application"
              }
            },
            "schema": {
              "title": "TaskList",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemList"
              }
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "default": {
            "$ref": "#/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "parameters": {
    "PageSize": {
      "name": "pageSize",
      "type": "integer",
      "format": "int32",
      "in": "query",
      "description": "Amount of items to return in a single page",
      "default": 20
    }
  },
  "responses": {
    "ErrorResponse": {
      "description": "Error response",
      "headers": {
        "X-Error-Code": {
          "type": "string"
        }
      },
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}
